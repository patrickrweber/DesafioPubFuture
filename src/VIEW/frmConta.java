package VIEW;

import DAO.ContaDAO;
import DTO.ContaDTO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Formulário de interface para receber os valores da tabela contas
 *
 * @author Patrick Renan Weber
 */
public class frmConta extends javax.swing.JFrame {

    /**
     * Creates new form frmConta
     */
    public frmConta() {
        initComponents();
        listarcontas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelValorSaldo = new javax.swing.JLabel();
        jButtonCadastrarConta = new javax.swing.JButton();
        jTextFieldSaldo = new javax.swing.JTextField();
        jButtonVoltarConta = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableConta = new javax.swing.JTable();
        jLabelIdConta = new javax.swing.JLabel();
        jTextFieldIdConta = new javax.swing.JTextField();
        jButtonCarregarCamposConta = new javax.swing.JButton();
        jButtonLimparCamposConta = new javax.swing.JButton();
        jButtonAlterarConta = new javax.swing.JButton();
        jTextFieldInstituicao = new javax.swing.JTextField();
        jButtonExcluirConta = new javax.swing.JButton();
        jLabelInstituicao = new javax.swing.JLabel();
        jLabelTipoConta = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1tipoConta = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldSaldoTotal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldConta1 = new javax.swing.JTextField();
        jTextFieldConta2 = new javax.swing.JTextField();
        jTextFieldValor = new javax.swing.JTextField();
        jButtonTransferir = new javax.swing.JButton();
        jButtonMostrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelValorSaldo.setText("Saldo");

        jButtonCadastrarConta.setText("Cadastrar");
        jButtonCadastrarConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarContaActionPerformed(evt);
            }
        });

        jButtonVoltarConta.setText("Voltar");

        jTableConta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Saldo", "Tipo Conta", "Instituição"
            }
        ));
        jScrollPane2.setViewportView(jTableConta);

        jLabelIdConta.setText("Código Conta");

        jTextFieldIdConta.setEnabled(false);

        jButtonCarregarCamposConta.setText("Carregar Campos");
        jButtonCarregarCamposConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarregarCamposContaActionPerformed(evt);
            }
        });

        jButtonLimparCamposConta.setText("Limpar Campos");
        jButtonLimparCamposConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparCamposContaActionPerformed(evt);
            }
        });

        jButtonAlterarConta.setText("Alterar");
        jButtonAlterarConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarContaActionPerformed(evt);
            }
        });

        jButtonExcluirConta.setText("Excluir");
        jButtonExcluirConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirContaActionPerformed(evt);
            }
        });

        jLabelInstituicao.setText("Instituição");

        jLabelTipoConta.setText("Tipo Conta");

        jList1tipoConta.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Carteira", "Conta Corrente", "Poupança"};
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1tipoConta);

        jLabel1.setText("Saldo Total");

        jTextFieldSaldoTotal.setEnabled(false);

        jLabel2.setText("Transferência");

        jLabel3.setText("De (Número conta)");

        jLabel4.setText("Para (Número conta)");

        jLabel5.setText("Valor");

        jButtonTransferir.setText("Transferir");
        jButtonTransferir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTransferirActionPerformed(evt);
            }
        });

        jButtonMostrar.setText("Mostrar Contas");
        jButtonMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMostrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelValorSaldo)
                                    .addComponent(jLabelIdConta))
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldSaldo, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                    .addComponent(jTextFieldIdConta)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonCadastrarConta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonVoltarConta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                .addComponent(jButtonTransferir))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabelTipoConta)
                                    .addComponent(jLabelInstituicao))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldInstituicao, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jTextFieldSaldoTotal)
                                    .addComponent(jTextFieldConta1)
                                    .addComponent(jTextFieldConta2)
                                    .addComponent(jTextFieldValor)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonAlterarConta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonExcluirConta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonLimparCamposConta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCarregarCamposConta))
                            .addComponent(jButtonMostrar))
                        .addContainerGap(38, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelIdConta)
                            .addComponent(jTextFieldIdConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelValorSaldo)
                            .addComponent(jTextFieldSaldo))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelTipoConta)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldInstituicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelInstituicao))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldConta1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldConta2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jTextFieldSaldoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jTextFieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonMostrar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCarregarCamposConta)
                    .addComponent(jButtonVoltarConta)
                    .addComponent(jButtonCadastrarConta)
                    .addComponent(jButtonLimparCamposConta)
                    .addComponent(jButtonAlterarConta)
                    .addComponent(jButtonExcluirConta)
                    .addComponent(jButtonTransferir)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * Evento do botão Cadastrar
     *
     * @param evt
     */
    private void jButtonCadastrarContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarContaActionPerformed
        cadastrarConta();
        limparCamposConta();
    }//GEN-LAST:event_jButtonCadastrarContaActionPerformed
    /**
     * Evento do botão Carregar Campos
     *
     * @param evt
     */
    private void jButtonCarregarCamposContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarregarCamposContaActionPerformed
        carregarCamposConta();
    }//GEN-LAST:event_jButtonCarregarCamposContaActionPerformed
    /**
     * Evento do botão Limpar Campos
     *
     * @param evt
     */
    private void jButtonLimparCamposContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparCamposContaActionPerformed
        limparCamposConta();
    }//GEN-LAST:event_jButtonLimparCamposContaActionPerformed
    /**
     * Evento do botão Alterar
     *
     * @param evt
     */
    private void jButtonAlterarContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarContaActionPerformed
        alterarConta();
        limparCamposConta();
    }//GEN-LAST:event_jButtonAlterarContaActionPerformed
    /**
     * Evento do botão Excluir
     *
     * @param evt
     */
    private void jButtonExcluirContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirContaActionPerformed
        excluirConta();
        limparCamposConta();
    }//GEN-LAST:event_jButtonExcluirContaActionPerformed

    private void jButtonMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMostrarActionPerformed
        listarcontas();
    }//GEN-LAST:event_jButtonMostrarActionPerformed
    /**
     * Evento do botao transferir
     *
     * @param evt
     */
    private void jButtonTransferirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTransferirActionPerformed
        transferirSaldo();
        listarcontas();
    }//GEN-LAST:event_jButtonTransferirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmConta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAlterarConta;
    private javax.swing.JButton jButtonCadastrarConta;
    private javax.swing.JButton jButtonCarregarCamposConta;
    private javax.swing.JButton jButtonExcluirConta;
    private javax.swing.JButton jButtonLimparCamposConta;
    private javax.swing.JButton jButtonMostrar;
    private javax.swing.JButton jButtonTransferir;
    private javax.swing.JButton jButtonVoltarConta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelIdConta;
    private javax.swing.JLabel jLabelInstituicao;
    private javax.swing.JLabel jLabelTipoConta;
    private javax.swing.JLabel jLabelValorSaldo;
    private javax.swing.JList<String> jList1tipoConta;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableConta;
    private javax.swing.JTextField jTextFieldConta1;
    private javax.swing.JTextField jTextFieldConta2;
    private javax.swing.JTextField jTextFieldIdConta;
    private javax.swing.JTextField jTextFieldInstituicao;
    private javax.swing.JTextField jTextFieldSaldo;
    private javax.swing.JTextField jTextFieldSaldoTotal;
    private javax.swing.JTextField jTextFieldValor;
    // End of variables declaration//GEN-END:variables

    /**
     * Método que atualiza a TableModel e faz a soma do saldo total
     */
    private void listarcontas() {
        float saldoTotal = 0;
        try {
            ContaDAO objcontadao = new ContaDAO();

            DefaultTableModel model = (DefaultTableModel) jTableConta.getModel();
            model.setNumRows(0);

            ArrayList<ContaDTO> lista = objcontadao.PesquisarConta();

            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getId_conta(),
                    lista.get(num).getSaldo_conta(),
                    lista.get(num).getTipo_conta(),
                    lista.get(num).getInstituicao(),});
                saldoTotal = saldoTotal + lista.get(num).getSaldo_conta();
            }
            jTextFieldSaldoTotal.setText("" + saldoTotal);

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Listar Contas View" + erro);

        }
    }

    /**
     * Método que carrega os campos selecionados
     */
    private void carregarCamposConta() {

        int setar = jTableConta.getSelectedRow();
        jTextFieldIdConta.setText(jTableConta.getModel().getValueAt(setar, 0).toString());
        jTextFieldSaldo.setText(jTableConta.getModel().getValueAt(setar, 1).toString());
        jTextFieldInstituicao.setText(jTableConta.getModel().getValueAt(setar, 3).toString());
    }

    /**
     * Método que cadastra as informações inseridas
     */
    private void cadastrarConta() {
        String tipoConta, instituicao;
        Float saldo;

        tipoConta = jList1tipoConta.getSelectedValue();
        saldo = Float.parseFloat(jTextFieldSaldo.getText());
        instituicao = (jTextFieldInstituicao.getText());

        ContaDTO objcontadto = new ContaDTO();

        objcontadto.setTipo_conta(tipoConta);
        objcontadto.setSaldo_conta(saldo);
        objcontadto.setInstituicao(instituicao);

        ContaDAO objcontadao = new ContaDAO();
        objcontadao.cadastrarConta(objcontadto);
    }

    /**
     * Método que limpa os campos preenchidos
     */
    private void limparCamposConta() {
        jTextFieldIdConta.setText("");
        jTextFieldSaldo.setText("");
        jTextFieldInstituicao.setText("");
    }

    /**
     * Método que altera as informações com os dados preenchidos
     */
    private void alterarConta() {
        String tipoConta, instituicao;
        Float saldo;
        int idConta;

        idConta = Integer.parseInt(jTextFieldIdConta.getText());
        saldo = Float.parseFloat(jTextFieldSaldo.getText());
        instituicao = jTextFieldInstituicao.getText();
        tipoConta = jList1tipoConta.getSelectedValue();

        ContaDTO objcontadto = new ContaDTO();
        objcontadto.setId_conta(idConta);
        objcontadto.setSaldo_conta(saldo);
        objcontadto.setTipo_conta(tipoConta);
        objcontadto.setInstituicao(instituicao);
        ContaDAO objcontadao = new ContaDAO();
        objcontadao.alterarConta(objcontadto);

    }

    /**
     * Método que exclui os registros carregados
     */
    private void excluirConta() {
        int idConta;

        idConta = Integer.parseInt(jTextFieldIdConta.getText());

        ContaDTO objcontadto = new ContaDTO();
        objcontadto.setId_conta(idConta);

        ContaDAO objcontadao = new ContaDAO();
        objcontadao.excluirConta(objcontadto);
    }

    /**
     * Método que faz a transferência de saldo entre contas
     */
    private void transferirSaldo() {
        float saldoConta1 = 0, saldoConta2 = 0, valorTransferencia = 0, novoSaldo1 = 0, novoSaldo2 = 0;
        int idConta1, idConta2;

        idConta1 = Integer.parseInt(jTextFieldConta1.getText());
        idConta2 = Integer.parseInt(jTextFieldConta2.getText());

        valorTransferencia = Float.parseFloat(jTextFieldValor.getText());

        ContaDTO objcontadto = new ContaDTO();
        objcontadto.setConta1(idConta1);
        objcontadto.setConta2(idConta2);
        if (idConta1 < idConta2) {
            try {
                ContaDAO objcontadao = new ContaDAO();

                DefaultTableModel model = (DefaultTableModel) jTableConta.getModel();
                model.setNumRows(0);

                ArrayList<ContaDTO> lista = objcontadao.transferirSaldoASC(objcontadto);

                for (int num = 0; num < lista.size(); num++) {
                    model.addRow(new Object[]{
                        lista.get(num).getId_conta(),
                        lista.get(num).getSaldo_conta(),
                        lista.get(num).getTipo_conta(),
                        lista.get(num).getInstituicao(),});

                }
                saldoConta1 = lista.get(0).getSaldo_conta();
                saldoConta2 = lista.get(1).getSaldo_conta();
                novoSaldo1 = saldoConta1 - valorTransferencia;
                novoSaldo2 = saldoConta2 + valorTransferencia;

                objcontadto.setNovoSaldo1(novoSaldo1);
                objcontadto.setNovoSaldo2(novoSaldo2);

                objcontadao.alterarSaldo1(objcontadto);
                objcontadao.alterarSaldo2(objcontadto);

            } catch (Exception erro) {
                JOptionPane.showMessageDialog(null, "Transferir ASC View " + erro);

            }
        }
        if (idConta1 > idConta2) {
            try {
                ContaDAO objcontadao = new ContaDAO();

                DefaultTableModel model = (DefaultTableModel) jTableConta.getModel();
                model.setNumRows(0);

                ArrayList<ContaDTO> lista = objcontadao.transferirSaldoDSC(objcontadto);

                for (int num = 0; num < lista.size(); num++) {
                    model.addRow(new Object[]{
                        lista.get(num).getId_conta(),
                        lista.get(num).getSaldo_conta(),
                        lista.get(num).getTipo_conta(),
                        lista.get(num).getInstituicao(),});

                }
                saldoConta1 = lista.get(0).getSaldo_conta();
                saldoConta2 = lista.get(1).getSaldo_conta();
                novoSaldo1 = saldoConta1 - valorTransferencia;
                novoSaldo2 = saldoConta2 + valorTransferencia;

                objcontadto.setNovoSaldo1(novoSaldo1);
                objcontadto.setNovoSaldo2(novoSaldo2);

                objcontadao.alterarSaldo1(objcontadto);
                objcontadao.alterarSaldo2(objcontadto);

            } catch (Exception erro) {
                JOptionPane.showMessageDialog(null, "Transferir DSC View " + erro);

            }
        }
    }

}
